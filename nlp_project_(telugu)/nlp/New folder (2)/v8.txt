ఈ క్లౌడ్ కంప్యూటింగ్ కోర్సుకు స్వాగతం.
మేము క్లౌడ్ యొక్క వివిధ అంశాలపై మా చర్చను కొనసాగిస్తున్నాము.
ఈ రోజు, మేము అన్నింటినీ కలిపి ఉంచే అంతర్లీన సాంకేతికత మరియు ప్రోటోకాల్‌లను అర్థం చేసుకోవడానికి ప్రయత్నిస్తున్నాము.
క్లౌడ్‌లో, మేము XaaS వంటి విభిన్న సేవలను పొందాము - ఏదైనా సేవగా.
కాబట్టి, మేము చేర్చడానికి వివిధ మార్గాలు మరియు ప్రోటోకాల్‌ల గురించి మాట్లాడబోతున్నాము.
మీరు క్లౌడ్ యొక్క వినియోగదారు లేదా కస్టమర్ అయితే, మీరు క్లౌడ్ ప్రొవైడర్ సేవను ఉపయోగిస్తున్నారు.
ఈ క్లౌడ్ అనేది క్లౌడ్ ప్రొవైడర్ ఎక్కడ మరియు ఎలా అంశాలను హోస్ట్ చేస్తుంది మరియు ఇది స్వతంత్రంగా ఉంటుంది.
వినియోగదారులు క్లయింట్‌ని ఉపయోగించి దీన్ని యాక్సెస్ చేస్తారు.
ఇది కేవలం సర్వీస్ ఓరియెంటెడ్ ఆర్కిటెక్చర్ కంటే ఎక్కువ; ఇది సాధారణంగా వెబ్ సేవలతో అమలు చేయబడుతుంది.
ఆశించిన అవుట్‌పుట్‌ను పొందడానికి వివిధ సేవల మధ్య పరస్పర చర్య చేయడానికి వెబ్ సేవలు వదులుగా జతచేయబడతాయి.
ఈ సేవ-ఆధారిత ఆర్కిటెక్చర్ యొక్క ప్రాథమిక అంశాలలో ఒకటి XML.
మేము ఒక ఉపన్యాసం లేదా రెండు కోసం XML బేసిక్స్ గురించి మాట్లాడబోతున్నాం.
మీలో చాలా మందికి XMLని ఉపయోగించుకోవచ్చు లేదా తెలిసి ఉండవచ్చు, కానీ అలా చేయని వారి కోసం మేము చాలా ప్రాథమిక అంశాలను కవర్ చేస్తాము.
మేము XML ఫీచర్లు మరియు అది ఎలా పని చేస్తుందో చర్చిస్తాము.
XML పెరుగుతున్న సాఫ్ట్‌వేర్ సాధన ప్రమాణం.
మేము XML యొక్క విభిన్న లక్షణాలను మరియు అది డేటాను ఎలా షేర్ చేస్తుందో చూద్దాం.
XMLలో వివిధ రకాల పార్సర్‌లు మరియు సాంకేతికతలు ఉన్నాయి.
XML అనేది HTML లాగా కాకుండా, ఇంటర్నెట్‌లో డాక్యుమెంట్‌లను వీక్షించడానికి విస్తరించదగిన మార్కప్ భాష.
XML అనేది డేటాను ప్రదర్శించడం లేదా ప్రాతినిధ్యం వహించడం.
ఇది HTML కంటే సమాచారాన్ని మార్చడానికి ఎక్కువ.
XML టెక్స్ట్-ఆధారిత సింటాక్స్‌ని ఉపయోగిస్తుంది, ఇది చదవగలిగేది మరియు ముద్రించదగిన యూనికోడ్ అక్షరాలను ఉపయోగిస్తుంది.
XMLలో, మీరు ముందే నిర్వచించిన ట్యాగ్‌ల సమితిని కలిగి ఉన్న HTML వలె కాకుండా మీ స్వంత మూలకాలు లేదా ట్యాగ్‌లను నిర్వచించండి.
XML యొక్క సింటాక్స్ నియమాలు స్థిరంగా మరియు సార్వత్రికంగా ఉంటాయి.
అన్ని XML ప్రాసెసింగ్ సాఫ్ట్‌వేర్ ఈ సింటాక్స్ నియమాలను అనుసరిస్తుంది.
మీకు XML డేటా మరియు ప్రాసెసింగ్ సాఫ్ట్‌వేర్ లేదా XML పార్సర్ ఉంటే, అది అన్ని రకాల XMLలను నిర్వహించగలదు.
XML సార్వత్రికమైనది మరియు సులభంగా చదవవచ్చు మరియు ప్రాసెస్ చేయవచ్చు.
ఒక సాధారణ XML ఉదాహరణను చూద్దాం.
XMLలో వెర్షన్, నేమ్‌స్పేస్ మరియు వివిధ అంశాల నిర్వచనాలు ఉన్నాయి.
XML ట్యాగ్‌లు వినియోగదారు నిర్వచించబడ్డాయి.
HTML కాకుండా, మీరు XMLలో మీ స్వంత ట్యాగ్‌లను నిర్వచించవచ్చు.
మీరు మీ స్వంత ట్యాగ్‌లను నిర్వచించినప్పుడు, అవి ఏమిటో మరియు అవి ఎలా ఉపయోగించబడుతున్నాయో మీరు వివరించాలి.
ఉదాహరణకు, నేను 'టేబుల్' అనే ట్యాగ్‌ని నిర్వచించినట్లయితే, అది ఫర్నిచర్ లేదా వర్డ్ ప్రాసెసింగ్ గురించి నేను స్పష్టం చేయాలి.
మీ ట్యాగ్ అంటే ఏమిటో నిర్వచించడం ముఖ్యం.
XML నేమ్‌స్పేస్‌లు మన స్వంత అంశాలు మరియు ఇతర విషయాలను నిర్వచించడంలో మాకు సహాయపడతాయి.
XML పత్రం క్రమానుగతంగా మరియు నిర్మాణాత్మకంగా ఉంటుంది.
మేము పార్ట్ ఆర్డర్ గురించి మాట్లాడుతున్నట్లయితే, ఇది XML నేమ్‌స్పేస్‌లోని టాప్ నోడ్ లాగా ఉంటుంది మరియు ఇది క్రమానుగతంగా ఉన్నందున ఇది చెట్టులా కనిపిస్తుంది.
ఈ నిర్మాణాత్మక సమాచారాన్ని సూచించడానికి మేము XML ట్రీని సృష్టిస్తాము.
బేసిక్స్‌కి తిరిగి వెళితే, XML అనేది HTML లాంటిది, కానీ సింటాక్స్ గురించి మరింత క్లిష్టంగా మరియు కఠినంగా ఉంటుంది.
XML అనేది కఠినమైన సింటాక్స్ నియమాలు మరియు స్వీయ-వివరించే డేటా.
మీరు XMLలో మీ స్వంత ట్యాగ్‌లు లేదా పదజాలాన్ని తయారు చేసుకోవచ్చు, ఇది మీ డేటాను విస్తరించడానికి మిమ్మల్ని అనుమతిస్తుంది.
ఇది వివిధ సిస్టమ్‌లు కమ్యూనికేట్ చేయడంలో సహాయపడటానికి HTML వంటి పంపిణీ చేయబడిన పరిసరాల కోసం రూపొందించబడింది.
XMLతో, మీరు మీ స్వంత ట్యాగ్‌లు మరియు మూలకాలను సృష్టించవచ్చు మరియు సిస్టమ్‌లలో డేటాను విశ్వసనీయంగా ఉపయోగించవచ్చు.
HTML కాకుండా విభిన్న డేటా రకాలను కలపడానికి XML గొప్పది.
ఉదాహరణకు, XMLలో, మీరు కొత్త డేటా సెట్‌ని సృష్టించడానికి రెండు రిపోజిటరీల నుండి డేటాను కలపవచ్చు.
మీరు పాఠశాలలోని అకడమిక్ మరియు మేనేజ్‌మెంట్ డేటా వంటి విభిన్న మూలాధారాల నుండి డేటాను కలపవలసి వచ్చినప్పుడు ఇది చాలా ఉపయోగకరంగా ఉంటుంది.
XML విభిన్న డేటా సెట్‌లను మిళితం చేయడం, వాటిని పరస్పర చర్య చేయడం మరియు కొత్త డేటాను రూపొందించడంలో మీకు సహాయపడుతుంది.
XML డేటాను ప్రాసెస్ చేయడం విషయానికి వస్తే, ఇది దాని ట్రీ నిర్మాణాన్ని అర్థం చేసుకోవడం.
HTML కాకుండా, మీరు XMLలో మీ స్వంత అంశాలను నిర్వచించండి.
ఏ అంశాలు ఉన్నాయి, వినియోగదారు నిర్వచించినవి మరియు అవి ఏమి చేస్తాయో మీరు తెలుసుకోవాలి.
XML డేటాను ప్రాసెస్ చేయడానికి, మీరు దానిని ఇంటర్నెట్ వనరుల నుండి పొందవచ్చు మరియు ఫైల్ బదిలీ తేదీలు, లావాదేవీ IDలు మరియు వివిధ రకాల బ్యాంకింగ్ లావాదేవీలు వంటి వాటిని కలిగి ఉండవచ్చు.
XML డేటాను సేకరించిన తర్వాత, మీరు దీన్ని తరచుగా ప్రత్యేక సాధనాలను ఉపయోగించి ప్రాసెస్ చేస్తారు.
ఇది XML పార్సర్ ద్వారా చేయబడుతుంది, ఇది XML డేటాను ప్రాసెస్ చేసే సాధనం.
XML డేటా సరిగ్గా నిర్మాణాత్మకంగా మరియు బాగా రూపొందించబడిందో లేదో XML పార్సర్ తనిఖీ చేస్తుంది.
XML డేటా సింటాక్స్ లోపాలను కలిగి ఉంటే, పార్సర్ దానిని ప్రాసెస్ చేయడాన్ని ఆపివేస్తుంది మరియు మినహాయింపును అందిస్తుంది.
కాబట్టి, XML డేటా యొక్క సింటాక్స్‌ని ధృవీకరించడం మరియు అది బాగా రూపొందించబడిందని నిర్ధారించుకోవడం పార్సర్ యొక్క పని.
బాగా రూపొందించబడిన XML డేటా ప్రాసెస్ చేయడానికి కనీస అవసరాలను తీరుస్తుంది.
డేటా చెల్లుబాటు కాకపోతే, పార్సర్ ఆపి XML-ఆధారిత అప్లికేషన్‌ను హెచ్చరిస్తుంది.
డేటా సరిగ్గా రూపొందించబడకపోతే, అది వాక్యనిర్మాణపరంగా సరైనది కాదని అర్థం.
కాబట్టి, మేము గుర్తుంచుకుంటే, మేము వేర్వేరు భాగాలతో వ్యవహరిస్తున్నాము
మేము XML గురించి మాట్లాడుతున్నప్పుడు, DTD - డాక్యుమెంట్ టైప్ డిక్లరేషన్ అని పిలవబడే విషయం ఉంది.
డేటాబేస్‌లలో వలె, మీరు డేటాను నిర్వహించడానికి పట్టికలను నిర్వచించినట్లుగా, XMLలో, మీరు DTDలను ఉపయోగించి నిర్మాణాన్ని నిర్వచిస్తారు.
ఇది ఏ డేటా ఎక్కడికి వెళుతుందో తెలుసుకోవడానికి స్కీమాలను సెటప్ చేయడం గురించి మరియు ఇది వినియోగదారు నిర్వచించినది మరియు క్రమానుగతమైనది.
XMLలోని ఎలిమెంట్స్ ఎలా నిర్మాణాత్మకంగా ఉన్నాయో, అవి ఏ స్థాయిలు మరియు రకాలుగా ఉన్నాయో మీరు నిర్వచించాలి.
DTD అంటే మీరు ముందుగా డాక్యుమెంట్ రకాన్ని డిక్లేర్ చేస్తారు.
మీరు మీ పత్ర రకాన్ని పొందిన తర్వాత, మిగిలిన డేటా తదనుగుణంగా సరిపోతుంది.
డేటా డిక్లేర్డ్ డూను అనుసరిస్తుందో లేదో తనిఖీ చేయడం పార్సర్ యొక్క పని
క్యూమెంట్ రకం మరియు వాక్యనిర్మాణపరంగా సరైనది.
స్కీమా లేదా డాక్యుమెంట్ రకాన్ని నిర్వచించిన తర్వాత, XML చెల్లుబాటు కావాలి.
XML డేటా సరైనదేనా కాదా అని నిర్ధారించడానికి పార్సర్ DTDని చూస్తుంది.
XML పార్సర్‌లు DTDలు మరియు అంతర్గత ఎంటిటీలతో కూడా వ్యవహరిస్తాయి, ప్రతిదీ బాగా రూపొందించబడిందో తనిఖీ చేస్తుంది.
XML సరైనదని నిర్ధారించుకోవడానికి DTD కంటెంట్‌కు స్పష్టమైన సింటాక్స్ నియమాలు అవసరం.
పార్సర్ ఎంటిటీ రిఫరెన్స్‌లను వాస్తవ ఎంటిటీతో భర్తీ చేస్తుంది, వాటి ద్వారా పునరావృతమవుతుంది.
తుది ఫలితం అప్లికేషన్‌ల కోసం సిద్ధంగా ఉన్న XML డేటా.
XML ప్రాసెసింగ్‌లో URLల ద్వారా సూచించబడే బాహ్య ఎంటిటీలు కూడా ఉండవచ్చు.
పార్సర్ ఈ బాహ్య ఎంటిటీలను గుర్తిస్తుంది మరియు పరిష్కరిస్తుంది.
పార్సర్ బాహ్య ఎంటిటీని కనుగొనలేకపోతే, అది ఫైర్‌వాల్ సమస్యల వల్ల కావచ్చు.
రెండు రకాల XML పార్సర్‌లు ఉన్నాయి: ఒకటి అన్ని ఎంటిటీలను తిరిగి పొందుతుంది మరియు మరొకటి వాటిని విస్మరిస్తుంది.
పార్సర్ విధానం మరియు నియమాలు దాని రకాన్ని బట్టి ఉంటాయి.
పార్సర్‌లను ధృవీకరించడం ద్వారా మొత్తం DTD కంటెంట్‌ని ప్రాసెస్ చేస్తుంది, ఏదైనా తప్పు జరిగితే ఆపివేస్తుంది.
ధృవీకరించని పార్సర్‌లు అన్ని నిర్వచించిన ఎలిమెంట్‌లను తిరిగి పొందడానికి ప్రయత్నిస్తాయి, అయితే DTD కంటెంట్ తప్పిపోయినట్లయితే దానిని దాటవేయండి.
పార్సర్ చెల్లుబాటు అవుతుందా లేదా చెల్లుబాటు కానిది అనేది అప్లికేషన్ యొక్క అవసరాలపై ఆధారపడి ఉంటుంది.
పార్సర్ రకం ఖచ్చితంగా అప్లికేషన్ ప్రవర్తనను ప్రభావితం చేస్తుంది.
XML అప్లికేషన్ యొక్క పార్సర్ ఇంటర్‌ఫేస్ అన్వయించిన XML డేటాను పొందుతుంది.
పార్సర్‌తో DTD యొక్క సంబంధం దాని ప్రవర్తన మరియు ధ్రువీకరణ తనిఖీలను నిర్ణయిస్తుంది.
ప్రత్యేక సమస్యలలో XML స్పెసిఫికేషన్‌లలో అక్షరాలు మరియు అక్షరాల సెట్‌లతో వ్యవహరించడం కూడా ఉంటుంది.
మీరు వైట్ స్పేస్ ట్యాగ్‌ని ఉపయోగించి తెలుపు అక్షరాలను నిర్వచించవచ్చు, కానీ EBCIDIC యొక్క NEL వంటి కొన్ని అక్షరాలు ట్యాగ్‌లుగా ఉపయోగించబడవు.
అక్షర సమితిలో ఎన్‌కోడింగ్ నిర్వచించబడకపోతే, అది కూడా సమస్యే.
అక్షరాలను చేర్చడం మరియు క్యారెక్టర్ సెట్‌లను నిర్వహించడం విషయానికి వస్తే, XML దాని కోసం కొన్ని సాధనాలను కలిగి ఉంది.
భాషా మాండలికాలలో, మేము ప్రాథమికంగా XML డాక్యుమెంట్‌ని ఎలా నిర్వచించాలో మరియు అది ఇతర అంశాలతో ఎలా సంకర్షణ చెందుతుందో తెలుసుకుంటున్నాము.
సేవా-ఆధారిత నిర్మాణంలో, మేము మూడు ప్రధాన భాగాలను కలిగి ఉన్నాము: వినియోగదారు, ప్రొవైడర్ మరియు కొన్ని రకాల సర్వీస్ రిజిస్ట్రీ లేదా రిపోజిటరీ.
డేటా కమ్యూనికేషన్ విశ్వవ్యాప్తంగా ఎలా అమలు చేయబడుతుందో మనం చూడాలి.
SOAP సందేశాల వంటి అంశాలు ప్రాథమికంగా XML డాక్యుమెంట్‌లు ఈ సందర్భంలో ఖచ్చితంగా పని చేస్తాయి.
XML డాక్యుమెంట్‌లు రెండు విధాలుగా వీక్షించబడతాయి: ఒకటి కఠినమైన పరిమితులతో మరియు మరింత అనుమతించదగినది.
ఇప్పుడు మేము 2001 నుండి ఈ XML స్కీమా విషయాన్ని పొందాము, ఇది XML డాక్యుమెంట్ నిర్మాణాలను నిర్వచించడానికి కొత్త స్పెక్.
XML స్కీమా విభిన్నంగా వ్రాయబడిన DTD వలె కాకుండా XMLలో వ్రాయబడుతుంది.
కాబట్టి, స్కీమాలలో XML డేటాను హ్యాండిల్ చేయడం అనేది XML యొక్క ఈ రెండు వర్గాలను అర్థం చేసుకోవడం: బాగా రూపొందించబడిన మరియు చెల్లుబాటు అయ్యే XML.
సరిగ్గా రూపొందించబడిన XML కేవలం వాక్యనిర్మాణపరంగా సరైనది, అయితే చెల్లుబాటు అయ్యే XML స్కీమాకు అనుగుణంగా ఉంటుంది.
అన్ని చెల్లుబాటు అయ్యే XML డాక్యుమెంట్‌లు బాగా రూపొందించబడ్డాయి, అయితే అన్ని బాగా రూపొందించబడిన XML చెల్లుబాటు కాదు.
స్కీమాలు మరియు DTDలు మూలకాలు, గుణాలు, గూడు కట్టుకునే నియమాలు మరియు రకాలను నియంత్రిస్తాయి.
కానీ గుర్తుంచుకోండి, XML స్కీమా లేదా DTD డేటాను కలిగి ఉండదు; ఇది కేవలం నిర్మాణాన్ని నిర్వచిస్తుంది.
A మరియు B వంటి రెండు సంస్థలు సమాచారాన్ని పంచుకోవాలనుకున్నప్పుడు, వారు ముందుగా ప్రోటోకాల్ నిర్మాణంపై అంగీకరించాలి.
ఉదాహరణకు, IIT ఖరగ్‌పూర్ మరియు ఒక బ్యాంకు విద్యార్థుల డేటాను మార్పిడి చేయడానికి ముందు దానిని ఎలా రూపొందించాలో అంగీకరించాలి.
సవాలు డేటా మార్పిడి కాదు, కానీ నిర్మాణంపై అంగీకరించడం మరియు గోప్యత మరియు నిర్వహణ సమస్యలతో వ్యవహరించడం.
స్కీమాలు DTDల కంటే శక్తివంతమైనవి ఎందుకంటే అవి కేవలం నిర్మాణాన్ని ఉంచడం కంటే ఎక్కువ చేస్తాయి; అవి టైప్ ధ్రువీకరణ మరియు XML డేటాబేస్ మోడల్‌లకు సంబంధించి ఉపయోగించబడతాయి.
ఈ రోజుల్లో, వివిధ పార్టీల మధ్య పరస్పర చర్య కోసం స్కీమాలు ప్రధానంగా ఉపయోగించబడుతున్నాయి.
DTD డాక్యుమెంట్ రకం బదిలీ అంశాలు మరియు ఇతర రకాలను కలిగి ఉంటుంది, కానీ స్కీమాలో, ఇది సరిగ్గా XML.
foo.org నుండి బాహ్య DTD గురించి ప్రస్తావించదగినది కూడా ఉంది.
మీరు వేర్వేరు అక్షరాలు లేదా అక్షరాలను చేర్చాలనుకున్నప్పుడు, XML ఈ అక్షరాల సెట్‌లను నిర్వహించడానికి నిర్దిష్ట మార్గాలను కలిగి ఉంటుంది.
XMLలో భాషా మాండలికాలను నిర్వచించడంలో, మేము XML డాక్యుమెంట్ ఎలా నిర్వచించబడిందో మరియు అది ఇతర అంశాలతో ఎలా సంకర్షణ చెందుతుందో తెలుసుకోవడానికి ప్రయత్నిస్తున్నాము.
సేవా-ఆధారిత నిర్మాణంలో, మూడు ప్రధాన భాగాలు ఉన్నాయి: వినియోగదారు, ప్రొవైడర్ మరియు ఒక విధమైన సర్వీస్ రిజిస్ట్రీ లేదా రిపోజిటరీ.
ప్రతి ఒక్కరూ ఉపయోగించుకునే విధంగా డేటా కమ్యూనికేషన్ ఎలా జరుగుతుందనే దానిపై దృష్టి కేంద్రీకరించబడింది.
SOAP సందేశాలు, ఉదాహరణకు, WSDL మరియు UDDI వంటి సిస్టమ్‌లలో ఈ రకమైన కమ్యూనికేషన్ కోసం ఖచ్చితమైన XML డాక్యుమెంట్‌లు.
XML డాక్యుమెంట్‌లు DTD (డాక్యుమెంట్ టైప్ డెఫినిషన్) లేదా XML స్కీమాను అనుసరిస్తాయా అనే దానిపై ఆధారపడి కఠినంగా లేదా ఎక్కువ అనుమతిని కలిగి ఉండవచ్చు.
XML స్కీమా, 2001లో ప్రవేశపెట్టబడింది, ఇది XML డాక్యుమెంట్ నిర్మాణాలను నిర్వచించే కొత్త వెర్షన్ లాంటిది. ఇది DTDల వలె కాకుండా XMLలోనే వ్రాయబడింది.
రెండు రకాల XML డాక్యుమెంట్‌లు ఉన్నాయి: బాగా రూపొందించబడినవి (కేవలం వాక్యనిర్మాణపరంగా సరైనవి) మరియు చెల్లుబాటు అయ్యేవి (స్కీమాకు అనుగుణంగా).
చెల్లుబాటు అయ్యే XML డాక్యుమెంట్‌లు ఎల్లప్పుడూ బాగా రూపొందించబడతాయి, కానీ అన్ని బాగా రూపొందించబడిన పత్రాలు చెల్లుబాటు కావు.
స్కీమాలు మరియు DTDలు ఎలిమెంట్స్, అట్రిబ్యూట్‌లు మరియు అవి ఎలా ఆర్గనైజ్ చేయబడుతున్నాయి అనే దాని కోసం నియమాలను సెట్ చేయడంలో సహాయపడతాయి.
A మరియు B సంస్థలు వంటి రెండు సంస్థలు డేటాను పంచుకున్నప్పుడు, వారు మొదట డేటా ఎలా నిర్మితమవుతుందో అంగీకరించాలి.
ఉదాహరణకు, IIT ఖరగ్‌పూర్ మరియు ఒక బ్యాంకు విద్యార్థుల డేటా లావాదేవీల కోసం ఎలా రూపొందించబడిందనే దానిపై అంగీకరించాలి.
ఇ ఛాలెంజ్ అనేది డేటాను మార్పిడి చేయడం మాత్రమే కాదు, గోప్యత మరియు నిర్వహణ సమస్యలను కూడా పరిగణనలోకి తీసుకుంటూనే, రెండు పార్టీలకు పని చేసే నిర్మాణాన్ని అంగీకరించడం.
స్కీమాలు DTDల కంటే శక్తివంతమైనవి ఎందుకంటే అవి డేటాను రూపొందించడం కంటే ఎక్కువ చేస్తాయి; అవి ధ్రువీకరణ మరియు డేటాబేస్ మోడలింగ్ కోసం ఉపయోగించబడతాయి.
ఈ రోజుల్లో, వివిధ పార్టీల మధ్య పరస్పర చర్యల కోసం స్కీమాలు విస్తృతంగా ఉపయోగించబడుతున్నాయి, డేటా నిర్మాణాలను నిర్వహించడంలో కీలక పాత్ర పోషిస్తున్నాయి.
DTD వివిధ డాక్యుమెంట్ రకాలు మరియు ఎలిమెంట్‌లను కలిగి ఉండవచ్చు, కానీ స్కీమాలో, అదంతా సరిగ్గా XML డాక్యుమెంట్‌గా నిర్వహించబడుతుంది.
బాహ్య DTDలు, foo.org నుండి ఒకదానిని ఈ పత్రాలలో సూచించవచ్చు.
మీరు విభిన్న అక్షరాలను చేర్చాలనుకుంటే, దానిని నిర్వహించడానికి XML మార్గాలు ఉన్నాయి.
XMLలో భాషా మాండలికం ఎలా పని చేస్తుందో నిర్వచించేటప్పుడు, మేము XML డాక్యుమెంట్‌ని ఎలా నిర్వచించాలో మరియు అది ఇతర అంశాలతో ఎలా సంకర్షణ చెందుతుందో కనుగొంటాము.
సేవా-ఆధారిత నిర్మాణంలో, మేము మూడు ప్రధాన భాగాలను కలిగి ఉన్నాము: వినియోగదారులు, ప్రొవైడర్లు మరియు కొన్ని రకాల సర్వీస్ రిజిస్ట్రీ లేదా రిపోజిటరీ.
ప్రతి ఒక్కరికీ డేటా కమ్యూనికేషన్ పని చేయడం ఎలా అనేది పెద్ద ప్రశ్న.
స్కోప్ సందేశాలు SOAP, WSDL మరియు UDDI వంటి సిస్టమ్‌లలో గొప్పగా పనిచేసే XML డాక్యుమెంట్‌లు మాత్రమే.
XML డాక్యుమెంట్ రకాన్ని ప్రకటించడానికి ఒక మార్గం ఉంది మరియు మీరు దీన్ని రెండు విధాలుగా వీక్షించవచ్చు: కఠినమైన నిబంధనలతో లేదా మరింత వదులుగా.
DTD అని పిలవబడేది ఉంది, ఆపై 2001 నుండి కొత్త XML స్కీమా ఉంది.
XML స్కీమా అనేది XML డాక్యుమెంట్‌లు ఎలా నిర్మించబడతాయో నిర్వచించడానికి ఒక కొత్త మార్గం.
XML స్కీమాలు XMLలో వ్రాయబడ్డాయి, కానీ DTDలు విభిన్నంగా వ్రాయబడ్డాయి.
XML డేటాను నిర్వహించడం విషయానికి వస్తే, XMLలో రెండు రకాలు ఉన్నాయి: చక్కగా రూపొందించబడినవి మరియు చెల్లుబాటు అయ్యేవి.
సరిగ్గా రూపొందించబడిన XML సరైన వాక్యనిర్మాణానికి సంబంధించినది, అయితే చెల్లుబాటు అయ్యే XML నిర్దిష్ట DTD లేదా స్కీమాకు సరిపోతుంది.
అన్ని చెల్లుబాటు అయ్యే XML డాక్యుమెంట్‌లు బాగా రూపొందించబడ్డాయి, అయితే అన్ని బాగా రూపొందించబడిన పత్రాలు తప్పనిసరిగా చెల్లుబాటు కావు.
స్కీమాలు మరియు DTDలు ఎలిమెంట్‌లు మరియు అట్రిబ్యూట్‌లు ఎలా నిర్వహించబడతాయి మరియు అవి ఎలా కలిసి పని చేస్తాయి అనేదానిని నియంత్రించడంలో సహాయపడతాయి.
స్కీమాలు మరియు DTDలు వాస్తవానికి డేటాను కలిగి ఉండవు; అది ఎలా నిర్మితమైందో వారు నిర్వచిస్తారు.
A మరియు B వంటి రెండు కంపెనీలు డేటాను పంచుకోవాలనుకున్నప్పుడు, వారు మొదట డేటా యొక్క నిర్మాణంపై అంగీకరించాలి.
ఉదాహరణకు, IIT ఖరగ్‌పూర్ మరియు ఒక బ్యాంకు విద్యార్థుల డేటాను మార్పిడి చేసుకునే ముందు వాటిని ఎలా రూపొందించాలో అంగీకరించాలి.
ఇది డేటా మార్పిడి గురించి మాత్రమే కాదు; ఇది రెండు వైపులా పనిచేసే నిర్మాణాన్ని అంగీకరించడం.
స్కీమాలు DTDల కంటే బలంగా ఉంటాయి ఎందుకంటే అవి కేవలం స్ట్రక్చర్ డేటా కంటే ఎక్కువ చేస్తాయి; అవి రకాలను ధృవీకరించడానికి మరియు డేటాబేస్ మోడలింగ్ కోసం కూడా ఉపయోగించబడతాయి.
ఈ రోజుల్లో, వివిధ సమూహాల మధ్య పరస్పర చర్యలను నిర్వహించడానికి స్కీమాలు విస్తృతంగా ఉపయోగించబడుతున్నాయి.
DTD ఉదాహరణను డాక్యుమెంట్ చేయడం అనేది ఇదంతా ఎలా పని చేస్తుందో అర్థం చేసుకోవడంలో భాగం.
కానీ స్కీమాలో, పత్రం XML ఆకృతిని మరింత ఖచ్చితంగా అనుసరిస్తుంది.
foo.org వంటి బాహ్య DTD అని పిలవబడేది కూడా ఉంది, అవసరమైనప్పుడు మీరు దీన్ని సూచించవచ్చు.
ఇది అవసరమైనప్పుడు, మేము బయటి మూలాలను పరిశీలిస్తాము.
దీనర్థం మేము ఇతర DTDలను తనిఖీ చేస్తున్నామని అర్థం వచ్చే డేటాను అర్థం చేసుకోవడం.
నేను వేరొకరి నుండి డేటాను పొందినప్పుడు, అది ఏ విధమైన డేటా అని నేను చూడాలనుకుంటున్నాను, అది ప్రత్యేక క్రమంలో లేదా సోపానక్రమంలో నిర్వహించబడితే.
మేము డీల్ చేస్తున్న డేటా రకాన్ని తనిఖీ చేయడానికి నేను బాహ్య DTDని ఉపయోగించవచ్చు.
పార్సర్‌ని ఉపయోగించి సరైన డేటాను ఫిల్టర్ చేసి సేకరించడమే పాయింట్.
నేను పొందుతున్న మూలం నుండి నిర్దిష్ట డేటా భాగాన్ని ఎంచుకోవడం నా లక్ష్యం.
నేను డేటా భాగాన్ని ఫిల్టర్ చేయాలనుకుంటున్నాను, కొన్ని అప్లికేషన్‌ల కోసం యూనిట్‌లను సెల్సియస్ నుండి ఫారెన్‌హీట్‌కి లేదా మీటర్ల నుండి అడుగులకు మార్చవచ్చు.
మేము XML మరియు దాని ఇతర ఫీచర్‌ల గురించి మాట్లాడుతూనే ఉంటాము, అవి ఇంటర్‌ఆపరేబిలిటీకి ఎలా సహాయపడతాయి.
ముఖ్యంగా, క్లౌడ్‌లో సాఫ్ట్‌వేర్‌ను సర్వీస్ మోడల్‌గా గుర్తించడానికి ఇది ఎలా ఉపయోగపడుతుందో తెలుసుకుందాం.
ధన్యవాదాలు!